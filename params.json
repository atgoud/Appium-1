{"name":"Appium","tagline":"Native iPhone app test automation with Appium","body":"### Welcome to Appium Pages.\r\nThis framework provides many valuable features for simplifying Selenium/Appium Web/Native Mobile app's testing. It simplifies the configuration and creation of Appium Driver for different platform. The framework also provides a Page abstraction for modeling your mobile/web app's pages.\r\n\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n##### Sample code creating a Mobile instance (Android) in PageObject/PageFactory\r\n\r\n``` java     \r\npublic void loginTest(){\r\n    mobile.loadTopLevelPage(LoginPage.class)\r\n        .login();\r\n```   \r\n           \r\n``` java            \r\nprotected MobileBrowser getAndroid() throws WebDriverException {\r\n    return MobileBrowserBuilder.getAndroidBuilder(\"http://127.0.0.1:4723/wd/hub\")\r\n           .withTimeoutsConfig(timeouts())\r\n           .withPlatformVersion(\"4.4\")\r\n           .withDeviceName(\"Moto X\")\r\n           .withApp(\"/Users/ssayem/IdeaProjects/Appium/src/test/resources/apps.apk\")\r\n           .withAppPackage(\"com.sayem.android\")\r\n           .withAppActivity(\"com.sayem.android.activities.HomeActivity\")\r\n           .build();\r\n}\r\n```\r\n``` java                               \r\nprivate TimeoutsConfig timeouts() {\r\n    return TimeoutsConfig.builder()\r\n           .pageLoadTimoutSeconds(10)\r\n           .implicitWaitTimeoutMillis(20000)\r\n           .build();\r\n}                              \r\n```             \r\n### SeleniumActions\r\n\r\n * SeleniumActions are for interacting with the DOM and javascript of a page.\r\n * Obtain a SeleniumActions from a Browser instance with browser.getActions()\r\n * Provides methods for waiting until a WebElement is present or visible.\r\n * Provides methods to refresh the page until a WebElement is present or visible.\r\n * Provides methods for finding a WebElement containing specific text.\r\n * Provides methods for interacting with Tiny MCE text editors.\r\n * Provides methods to load Pages.\r\n * Provides much more functionality.\r\n * Pages\r\n\r\nPages provide an abstraction for modeling the pages for your webapp.\r\nPages should extend BaseTopLevelPage or BaseSubPage.\r\nUses the Selenium @FindBy annotation to instantiate member variables that are WebElements.\r\nUse the annotation @SubPageField to indicate a member variable that is a SubPage and should be instantiated on page load.\r\nModel the actions that you can perform on your web pages in your Page classes.\r\nThen, test code is incredibly simple. It just delegates to Page classes and performs high-level actions.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}